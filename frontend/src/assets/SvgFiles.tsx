import { Component } from "solid-js";

const Butterfly: Component = () => {
    return (
        <svg id="erpaQhU7WVI1" xmlns="http://www.w3.org/2000/svg" width="100%" height="auto" viewBox="0 0 2022 1360"><ellipse rx="202.2" ry="136" transform="matrix(.082519 0 0 0.12029 553.452211 366.658374)" fill="#5aa8d4" stroke-width="0"/><polygon points="0,-209.934933 176.768503,93.007289 -192.085672,96.234215 0,-209.934933" transform="matrix(2.312259-1.645814-.316886-.445204 1557.86082 409.601392)" fill="#0aacee" stroke-width="0"/><polygon points="0,-2.457102 2.336843,-0.759286 1.444248,1.987837 -1.444248,1.987837 -2.336843,-0.759286 0,-2.457102" transform="translate(2441.600792 567.688907)" fill="#d2dbed" stroke-width="0"/><polygon points="-78.819108,-3.480053 463.837718,-217.820623 -363.818935,379.471628 -78.819108,-3.480053" transform="translate(1443.662127 298.431327)" fill="#62bdec" stroke-width="0"/><polygon points="107.230627,-251.890811 158.82272,-84.975213 -8.092877,122.404771 -209.403204,180.066523 107.230627,-251.890811" transform="translate(1857.496934 314.171858)" fill="#8fc7f0" stroke-width="0"/><polygon points="101.206696,-68.511935 104.039731,74.370525 -94.927555,-9.387887 101.206696,-68.511935" transform="translate(1743.021285 519.556628)" fill="#64bcec" stroke-width="0"/><polygon points="13.563696,-172.871402 227.177379,-82.020802 166.827577,-16.354362 -522.132284,-7.394516 13.563696,-172.871402" transform="translate(1614.218689 692.063359)" fill="#5d95ba" stroke-width="0"/><polygon points="151.079624,304.241424 201.294706,514.966809 -137.640163,438.913299 151.079624,304.241424" transform="translate(1570.981777 544.039976)" fill="#63bbea" stroke-width="0"/><polygon points="-132.866058,-178.78043 203.437303,-103.468317 -7.344388,124.962847 -132.866058,-178.78043" transform="translate(1555.965617 1173.549738)" fill="#8ec6ee" stroke-width="0"/><polygon points="313.719287,-72.978704 181.063641,-14.739779 295.116076,266.010712 -132.837281,-284.975706 313.719287,-72.978704" transform="translate(1224.696559 999.319886)" fill="#03aaec" stroke-width="0"/><polygon points="-480.25786,-255.456308 132.83728,-118.077583 -14.759698,-42.008371 -480.25786,-255.456308" transform="translate(1567.575693 960.717598)" fill="#64beed" stroke-width="0"/><polygon points="238.213594,94.012609 679.010803,674.896914 437.594039,670.035893 238.213594,94.012609" transform="translate(853.433391 630.327439)" fill="#5a96bb" stroke-width="0"/><line x1="-264.981574" y1="-78.580469" x2="255.239142" y2="82.036562" transform="translate(739.169449 600.006871)" fill="#5aa8d4" stroke="#5aa8d4" stroke-width="12"/><line x1="-218.249886" y1="-152.89462" x2="215.416096" y2="154.062372" transform="translate(773.638594 522.62716)" fill="#5aa8d4" stroke="#5aa8d4" stroke-width="12"/><line x1="-146.019799" y1="-198.447881" x2="144.856393" y2="191.970888" transform="translate(853.128662 490.268371)" fill="#5aa8d4" stroke="#5aa8d4" stroke-width="12"/><line x1="-355.748384" y1="-1.329173" x2="358.105085" y2="-1.329173" transform="translate(640.76509 683.372606)" fill="#5aa8d4" stroke="#5aa8d4" stroke-width="11"/><line x1="7.968853" y1="-55.07536" x2="-10.833604" y2="50.998878" transform="translate(1030.942114 679.177265)" fill="#5aa8d4" stroke="#5aa8d4" stroke-width="11"/><line x1="8.735743" y1="56.310026" x2="-11.131004" y2="-52.957082" transform="translate(1058.556291 677.058987)" fill="#5aa8d4" stroke="#5aa8d4" stroke-width="11"/><line x1="-29.085538" y1="0.999246" x2="27.676596" y2="0.289719" transform="translate(1043.872598 728.822134)" fill="#5aa8d4" stroke="#5aa8d4" stroke-width="11"/><line x1="-20.641018" y1="-32.898565" x2="18.633988" y2="28.28776" transform="translate(1022.00009 602.6761)" fill="#5aa8d4" stroke="#5aa8d4" stroke-width="11"/><line x1="-21.191187" y1="33.09063" x2="18.179812" y2="-27.269717" transform="translate(1066.786318 597.046387)" fill="#5aa8d4" stroke="#5aa8d4" stroke-width="11"/><line x1="20.278542" y1="31.976398" x2="-22.717253" y2="-33.757559" transform="translate(1064.178173 543.589033)" fill="#5aa8d4" stroke="#5aa8d4" stroke-width="11"/><line x1="22.610016" y1="-36.079902" x2="-19.578259" y2="28.668164" transform="translate(1021.744852 546.324797)" fill="#5aa8d4" stroke="#5aa8d4" stroke-width="11"/><polygon points="8.142866,-44.682311 24.737231,-27.130468 1.2133,-27.447584 8.142866,-44.682311" transform="matrix(-.557219 0.830366-.830366-.557219 1020.805064 486.444713)" fill="#5aa8d4" stroke-width="0"/><ellipse rx="202.2" ry="136" transform="matrix(.082519 0 0 0.12029 1332.820079 183.009135)" fill="#5aa8d4" stroke-width="0"/><ellipse rx="202.2" ry="136" transform="matrix(.082519 0 0 0.12029 753.589478 184.715404)" fill="#5aa8d4" stroke-width="0"/><ellipse rx="202.2" ry="136" transform="matrix(.082519 0 0 0.12029 493.850203 323.995885)" fill="#5aa8d4" stroke-width="0"/><ellipse rx="202.2" ry="136" transform="matrix(.082519 0 0 0.12029 765.033868 809.958018)" fill="#5aa8d4" stroke-width="0"/><ellipse rx="202.2" ry="136" transform="matrix(.082519 0 0 0.12029 695.671136 842.638536)" fill="#5aa8d4" stroke-width="0"/><ellipse rx="202.2" ry="136" transform="matrix(.082519 0 0 0.12029 755.592502 1014.461248)" fill="#5aa8d4" stroke-width="0"/><ellipse rx="202.2" ry="136" transform="matrix(.082519 0 0 0.12029 710.110019 1075.104558)" fill="#5aa8d4" stroke-width="0"/><ellipse rx="202.2" ry="136" transform="matrix(.082519 0 0 0.12029 233.82337 228.836764)" fill="#5aa8d4" stroke-width="0"/><ellipse rx="202.2" ry="136" transform="matrix(.082519 0 0 0.12029 288.561031 302.63486)" fill="#5aa8d4" stroke-width="0"/><line x1="-131.827475" y1="-177.405001" x2="133.163928" y2="178.288158" transform="translate(886.809292 362.157069)" fill="none" stroke="#5aa8d4" stroke-width="11"/><line x1="-131.125662" y1="178.097049" x2="134.363964" y2="-177.246079" transform="translate(1195.560527 365.015876)" fill="none" stroke="#5aa8d4" stroke-width="11"/><line x1="289.859246" y1="115.279575" x2="-292.273598" y2="-121.980554" transform="translate(420.338861 179.219538)" fill="#5aa8d4" stroke="#5aa8d4" stroke-width="12"/><line x1="-186.742338" y1="-130.095266" x2="176.578248" y2="126.637617" transform="translate(311.220515 193.995981)" fill="#5aa8d4" stroke="#5aa8d4" stroke-width="12"/><line x1="55.907996" y1="74.805197" x2="-58.366321" y2="-80.464391" transform="translate(177.720089 153.076601)" fill="#5aa8d4" stroke="#5aa8d4" stroke-width="12"/><line x1="1.13665" y1="0" x2="-1.136649" y2="0" transform="translate(94.688797-115.172667)" fill="none" stroke="#3f5787" stroke-width="3"/><ellipse rx="96.046878" ry="88.090331" transform="matrix(.367164 0 0 0.405167 443.215444 511.873527)" paint-order="markers stroke fill" fill="#5aa8d4" stroke-width="0"/><ellipse rx="96.046878" ry="88.090331" transform="matrix(.367164 0 0 0.405167 212.588905 607.919991)" paint-order="markers stroke fill" fill="#5aa8d4" stroke-width="0"/><ellipse rx="96.046878" ry="88.090331" transform="matrix(.235323 0 0 0.25244 212.588905 607.919991)" paint-order="markers stroke fill" stroke-width="0"/><ellipse rx="96.046878" ry="88.090331" transform="matrix(.367164 0 0 0.405167 217.478866 443.017815)" paint-order="markers stroke fill" fill="#5aa8d4" stroke-width="0"/><ellipse rx="96.046878" ry="88.090331" transform="matrix(.367164 0 0 0.405167 43.927048 232.276322)" paint-order="markers stroke fill" fill="#5aa8d4" stroke-width="0"/><ellipse rx="96.046878" ry="88.090331" transform="matrix(.367164 0 0 0.405167 101.261131 46.327947)" paint-order="markers stroke fill" fill="#5aa8d4" stroke-width="0"/><ellipse rx="96.046878" ry="88.090331" transform="matrix(.235323 0 0 0.25244 101.261131 46.327947)" paint-order="markers stroke fill" stroke-width="0"/><ellipse rx="96.046878" ry="88.090331" transform="matrix(.235323 0 0 0.25244 43.927048 232.276322)" paint-order="markers stroke fill" stroke-width="0"/><ellipse rx="96.046878" ry="88.090331" transform="matrix(.235323 0 0 0.25244 217.478866 443.017815)" paint-order="markers stroke fill" stroke-width="0"/><ellipse rx="96.046878" ry="88.090331" transform="matrix(.235323 0 0 0.25244 443.215444 511.873527)" paint-order="markers stroke fill" stroke-width="0"/><ellipse rx="96.046878" ry="88.090331" transform="matrix(.235323 0 0 0.25244 443.215444 511.873527)" paint-order="markers stroke fill" stroke-width="0"/><ellipse rx="96.046878" ry="88.090331" transform="matrix(.367164 0 0 0.405167 342.914341 840.922927)" paint-order="markers stroke fill" fill="#5aa8d4" stroke-width="0"/><ellipse rx="96.046878" ry="88.090331" transform="matrix(.367164 0 0 0.405167 659.469174 986.259422)" paint-order="markers stroke fill" fill="#5aa8d4" stroke-width="0"/><ellipse rx="96.046878" ry="88.090331" transform="matrix(.367164 0 0 0.405167 296.127935 1064.900403)" paint-order="markers stroke fill" fill="#5aa8d4" stroke-width="0"/><ellipse rx="96.046878" ry="88.090331" transform="matrix(.367164 0 0 0.405167 524.087232 1312.768809)" paint-order="markers stroke fill" fill="#5aa8d4" stroke-width="0"/><ellipse rx="96.046878" ry="88.090331" transform="matrix(.235323 0 0 0.25244 524.087232 1312.768809)" paint-order="markers stroke fill" stroke-width="0"/><ellipse rx="96.046878" ry="88.090331" transform="matrix(.235323 0 0 0.25244 296.127935 1064.900403)" paint-order="markers stroke fill" stroke-width="0"/><ellipse rx="96.046878" ry="88.090331" transform="matrix(.235323 0 0 0.25244 659.469174 986.259422)" paint-order="markers stroke fill" stroke-width="0"/><ellipse rx="96.046878" ry="88.090331" transform="matrix(.235323 0 0 0.25244 342.914341 840.922927)" paint-order="markers stroke fill" stroke-width="0"/><polygon points="435.428908,183.63045 455.393047,209.805655 423.006777,209.657772 435.428908,183.63045" transform="translate(554.434279 478.093491)" fill="#5aa8d4" stroke="#5aa8d4"/><polygon points="420.997011,182.910997 450.353018,176.730785 438.76512,213.297039 420.997011,182.910997" transform="translate(558.811929 514.144728)" fill="#5aa8d4" stroke-width="0"/><line x1="-311.346804" y1="66.10379" x2="313.816707" y2="-67.536236" transform="translate(683.327055 767.661347)" fill="#5aa8d4" stroke="#5aa8d4" stroke-width="11"/><line x1="110.551851" y1="-53.526094" x2="-113.923126" y2="52.079143" transform="translate(885.385172 754.13698)" fill="#5aa8d4" stroke="#5aa8d4" stroke-width="11"/><line x1="119.666865" y1="-150.276506" x2="-119.127638" y2="156.017834" transform="translate(876.925713 854.820724)" fill="#5aa8d4" stroke="#5aa8d4" stroke-width="11"/><line x1="106.943736" y1="-303.939377" x2="-107.604903" y2="307.464527" transform="translate(891.830658 1008.197483)" fill="#5aa8d4" stroke="#5aa8d4" stroke-width="11"/><line x1="118.936681" y1="-0.554289" x2="-115.079261" y2="-0.852225" transform="translate(670.304914 1312.591551)" fill="none" stroke="#5aa8d4" stroke-width="11"/><line x1="-75.699175" y1="98.998984" x2="86.254416" y2="-108.25631" transform="translate(617.560815 1188.915732)" fill="none" stroke="#5aa8d4" stroke-width="11"/><line x1="57.474987" y1="-140.631425" x2="-54.646729" y2="128.913712" transform="translate(590.279385 1153.904563)" fill="none" stroke="#5aa8d4" stroke-width="11"/><line x1="-91.468912" y1="-102.772837" x2="95.261952" y2="98.178013" transform="translate(407.94849 1190.734494)" fill="none" stroke="#5aa8d4" stroke-width="11"/><line x1="152.460662" y1="-32.906049" x2="-149.361938" y2="33.347692" transform="translate(476.606757 1025.227149)" fill="none" stroke="#5aa8d4" stroke-width="11"/><line x1="-64.848425" y1="-88.654968" x2="65.393973" y2="88.021677" transform="translate(358.683237 398.052884)" fill="none" stroke="#5aa9d4" stroke-width="11"/><line x1="-85.158127" y1="-26.251405" x2="85.289533" y2="26.978097" transform="translate(329.161065 476.650874)" fill="none" stroke="#5aa9d4" stroke-width="11"/><line x1="90.787051" y1="-38.10007" x2="-88.72095" y2="36.647741" transform="translate(327.627446 559.849722)" fill="none" stroke="#5aa9d4" stroke-width="11"/><line x1="-24.273595" y1="-24.843784" x2="28.955907" y2="27.819447" transform="translate(260.915006 655.317525)" fill="none" stroke="#5aa8d4" stroke-width="11"/><line x1="0.782947" y1="-52.145445" x2="-1.533619" y2="52.526461" transform="translate(214.906426 528.027122)" fill="none" stroke="#5aa8d4" stroke-width="11"/><line x1="21.282517" y1="-66.018042" x2="-18.922745" y2="64.224357" transform="translate(71.525985 140.979641)" fill="none" stroke="#5aa8d4" stroke-width="11"/><line x1="-71.48875" y1="-88.041825" x2="68.38026" y2="81.839563" transform="translate(132.586059 340.812612)" fill="none" stroke="#5aa8d4" stroke-width="11"/><line x1="17.500646" y1="-83.295919" x2="-16.219741" y2="82.668357" transform="translate(319.370785 951.603605)" fill="none" stroke="#5aa8d4" stroke-width="11"/><line x1="-131.60613" y1="-60.39037" x2="131.850798" y2="61.216442" transform="translate(503.02011 913.408731)" fill="#5aa8d4" stroke="#5aa8d4" stroke-width="11"/><line x1="78.381951" y1="-36.752906" x2="-80.174012" y2="38.561176" transform="translate(605.047513 884.108554)" fill="#5aa8d4" stroke="#5aa8d4" stroke-width="11"/><line x1="-37.525985" y1="0.69186" x2="37.768886" y2="1.448593" transform="translate(1042.549578 778.350812)" fill="none" stroke="#5aa8d4" stroke-width="12"/><line x1="-5.687303" y1="-28.743576" x2="4.90695" y2="27.254619" transform="translate(1080.141091 803.813404)" fill="none" stroke="#5aa8d4" stroke-width="12"/><line x1="44.966038" y1="1.018907" x2="-46.598579" y2="1.586457" transform="translate(1043.298116 825.508721)" fill="none" stroke="#5aa8d4" stroke-width="12"/><line x1="-4.071917" y1="29.32744" x2="6.14397" y2="-27.427488" transform="translate(1004.744299 801.929766)" fill="none" stroke="#5aa8d4" stroke-width="12"/><line x1="-54.053009" y1="-0.423887" x2="55.21292" y2="-0.048833" transform="translate(1042.175309 875.660783)" fill="none" stroke="#5aa8d4" stroke-width="12"/><line x1="-4.681922" y1="-15.403293" x2="1.83451" y2="12.037952" transform="translate(1096.444331 886.389569)" fill="none" stroke="#5aa8d4" stroke-width="12"/><line x1="1.444757" y1="-13.105831" x2="-4.4311" y2="18.148725" transform="translate(1096.8186 908.970734)" fill="none" stroke="#5aa8d4" stroke-width="12"/><line x1="54.117386" y1="0.350695" x2="-55.674318" y2="1.048723" transform="translate(1044.046654 922.070153)" fill="none" stroke="#5aa8d4" stroke-width="12"/><line x1="4.096292" y1="13.782515" x2="-4.279929" y2="-12.346295" transform="translate(990.151901 913.461963)" fill="none" stroke="#5aa8d4" stroke-width="12"/><line x1="-2.283566" y1="14.108864" x2="5.7176" y2="-19.521039" transform="translate(988.280556 890.257278)" fill="none" stroke="#5aa8d4" stroke-width="12"/><line x1="47.062197" y1="0.030509" x2="-45.675915" y2="0.248205" transform="translate(1042.706152 973.936988)" fill="none" stroke="#5aa8d4" stroke-width="12"/><line x1="-6.167505" y1="-26.344147" x2="5.370335" y2="27.861932" transform="translate(1006.245474 996.393133)" fill="none" stroke="#5aa8d4" stroke-width="12"/><line x1="-37.560075" y1="0.303343" x2="36.056368" y2="0.416745" transform="translate(1043.515811 1019.59782)" fill="none" stroke="#5aa8d4" stroke-width="12"/><line x1="-6.622325" y1="26.884858" x2="5.281383" y2="-28.276615" transform="translate(1080.568454 997.890211)" fill="none" stroke="#5aa8d4" stroke-width="12"/><line x1="-12.840772" y1="69.840869" x2="11.605459" y2="-55.649785" transform="translate(1053.877057 1127.926424)" fill="none" stroke="#5aa8d4" stroke-width="12"/><line x1="28.326395" y1="-1.664893" x2="-29.292849" y2="-2.043967" transform="translate(1043.082048 1070.776378)" fill="none" stroke="#5aa8d4" stroke-width="12"/><line x1="-11.31563" y1="-53.596641" x2="11.500853" y2="71.42837" transform="translate(1030.93236 1126.338923)" fill="none" stroke="#5aa8d4" stroke-width="12"/></svg>
    )
}

const FileTextSVG: Component<{ class?: string }> = (props) => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="0.7" stroke-linecap="round" stroke-linejoin="round" class={`w-full h-auto ${props.class || ''}`}><path d="M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"/><path d="M14 2v4a2 2 0 0 0 2 2h4"/><path d="M10 9H8"/><path d="M16 13H8"/><path d="M16 17H8"/></svg>
    )
}

const Anga: Component = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" class="w-full h-auto spin-scale-hover" width="955" height="927" viewBox="0 0 927 955" fill="none"><path fill="#7103DB" d="M515.488 854.122c10.28-7.235 30.938-17.365 34.583-29.67 1.515-5.126 1.043-12.881 3.668-17.297.801-1.352 1.345-1.225 2.836-1.657 4.009 2.505 4.093 7.595 7.789 10.414 2.014-1.074 2.145-2.854 2.891-4.928 5.116 18.657 7.551 33.591-2.514 51.4-4.002 7.08-9.622 12.012-17.569 14.137-10.101 2.704-20.964.277-30.371-3.842-8.249-2.719-16.228-5.613-24.164-9.154.052-3.738-2.276-3.175-3.145-6.608 4.208-4.159 19.877-2.752 25.996-2.795"/><path fill="#0D01FB" d="M391.888 680.498c9.99-2.268 17.85-2.478 27.963-.246 22.804 4.658 60.151 24.112 75.677 41.936 9.098 7.953 17.319 17.016 25.834 25.595 7.003 7.382 14.424 15.275 20.388 23.541l4.644 6.549c6.742 8.702 18.144 21.404 21.289 32.1l-.428 1.011c-.746 2.074-.877 3.854-2.891 4.928-3.697-2.819-3.78-7.909-7.789-10.414-1.492.432-2.035.305-2.836 1.657-2.625 4.416-2.154 12.171-3.668 17.297-3.645 12.305-24.303 22.435-34.583 29.67-6.119.043-21.788-1.364-25.996 2.795.868 3.433 3.196 2.87 3.145 6.608-1.289-.733-2.78-1.724-4.192-2.172-3.097-.987-4.612.143-7.353 1.368-5.231-3.882-10.232-7.953-15.209-12.159-24.096-16.001-43.275-41.056-62.446-62.417-18.707-20.849-43.95-48.723-41.951-78.821.638-9.61 3.843-14.161 10.838-20.298 6.235-4.817 11.902-6.891 19.564-8.528"/><path fill="#17012E" d="M856.411 383.046c-4.8 20-26 20.666-36 18.5L774.076 368c-21.6-6.8-36.333-15.833-41-19.5l-57-46c-41.2-52.8-93.277-36.969-114.165-22.454-26.8-6.4-44.167-2.667-49.5 0-39.6 0-57.833-10.334-62-15.5-16.4-12.4-44.833-63.167-57-87-16-30.4-6.667-57.667 0-67.5l24.5-31c7.2-25.6 53.667-21.334 76-16 211.6 38.4 329.833 229.333 362.5 320"/><path fill="#490684" d="M82.076 278.5c13.2-4 18.5-20.333 19.5-28 1 4.333 3.5 14.1 5.5 18.5s-12.833 17.167-20.5 23c-43.2-38-13.666 51.833 6.5 101.5 138.4 343.6 326.667 478.833 403.5 503.5-100.8 49.2-223.333-2.5-272-34.5-282-142.4-239.833-442-183.5-574 2.4-32.4 28.334-20.167 41-10"/><path fill="#4C06A1" d="M432.57 174.347c8.305-2.366 16.677-3.263 25.021-5.253 11.318-2.7 23.712-7.976 35.403-8.213 4.926-.1 13.908 3.359 18.207 5.739 5.981 3.309 10.545 9.766 15.273 14.6 4.164 4.257 8.848 7.996 12.901 12.366 10.434 11.252 19.817 23.47 30.073 34.835 5.782 6.409 13.19 12.068 17.854 19.38.167 4.389 1.134 10.683-1.84 14.262-2.502 3.01-6.492 3.288-10.097 3.667 2.994-3.964 2.003-8.521 1.705-13.192-.024-.397-.023-.797-.075-1.191-.869-6.776-43.946-51.077-51.782-57.205-23.149-15.597-26.167-18.46-54.043-13.001-7.508 1.47-11.945 3.556-16.276 10.097a41 41 0 0 0-1.523 2.452c1.884 4.293 6.567 4.61 8.261 9.171l-.496-.189c.091 2.103.722 4.161.781 6.197.54 2.971.75 4.673 3.304 6.678 2.994 2.347 8.265 2.096 11.842 1.93 8.42.27 12.473 3.588 18.116 9.568a239 239 0 0 1 3.304 3.585l-4.7-1.276c-9.01-1.378-17.945-2.836-26.849-4.785-10.462-.993-27.67-12.186-34.356-20.272-.028-2.752-1.915-4.328-1.828-6.85 2.439.486 3.744 1.403 5.655 2.886l.714.555c-.567-2.798-1.452-5.339-2.8-7.857-2.189-4.099-2.074-6.679-1.816-11.24z"/><path fill="#490684" d="M459.308 179.197c8.645-4.667 33.658-6.881 43.081-4.021 10.843 3.289 16.447 10.234 22.824 18.966-23.149-15.597-26.167-18.46-54.043-13.001-7.508 1.47-11.945 3.556-16.276 10.097a40 40 0 0 0-1.523 2.452c1.884 4.293 6.567 4.61 8.261 9.171l-.496-.19c.091 2.104.722 4.162.781 6.198-9.791-8.759-18.12-18.747-26.583-28.752 8.559-.349 15.614 2.418 23.974-.92"/><path fill="#7103DB" d="M461.918 208.869c-.06-2.036-.691-4.094-.782-6.198l.496.19c-1.693-4.561-6.377-4.878-8.261-9.171q.718-1.254 1.523-2.452c4.331-6.541 8.768-8.627 16.276-10.097 27.876-5.459 30.894-2.596 54.043 13.001 7.836 6.127 50.913 50.429 51.782 57.205.052.394.052.794.075 1.19.298 4.672 1.289 9.229-1.705 13.193-5.278 1.063-10.517-.491-15.974.586-16.669-12.49-34.139-25.148-53.29-33.52l-7.618-2.166a234 234 0 0 0-3.304-3.585c-5.643-5.98-9.696-9.298-18.116-9.568-3.577.165-8.848.417-11.842-1.93-2.554-2.005-2.764-3.707-3.303-6.678"/><path fill="#490684" d="M477.063 217.477c.738-1.534 2.296-2.793 2.3-4.122l-1.011-.455c-3.934-1.791-10.402-4.675-12.457-8.583l.726-.464c13.575 7.975 34.717 11.868 39.48 28.943l-7.618-2.166a239 239 0 0 0-3.304-3.585c-5.643-5.98-9.696-9.298-18.116-9.568"/><path fill="#00E8F6" d="M407.79 272c-31.6-84-39.166-125-39-135-1.241-11.033-1.804-21.551-1.949-31 6.817-19.833 19.549-61.1 15.949-67.5-4.5-8 2-30-60.5-33.5-38.166 1.667-126.4 23.7-174 98.5-20.394 30.167-58.247 101.7-46.5 146.5 14.684 56 50.602 256 265.051 325 59.983 8.167 183.049 53 195.449 167 7.667 15.667 21.9 65.8 17.5 141 11.834 19.167 50.8 48.5 112 12.5 56.667-23.667 163-108.4 135-258-10.833-59.667-61.5-193.1-177.5-249.5-16.166-5.667-67.8-22.1-145-42.5-26.522-8.667-82.954-35.5-96.5-73.5"/><path fill="#0D01FB" d="M323.5 3.5C279.1 3.5 221.833 32.167 203 43c-182 127.6-81.923 330.5-13.423 414.5 39.2 58 144.666 70.833 192.5 70 60.8-5.2 88-37.5 94-53 18-40 50.166-48.333 64-47.5 65.6-.8 40-28.333 19-42-122.8-42.8-158.834-91.167-161.5-110 3.2-.8 12.09 1.667 12.923 0-31.6-84-41.667-129.5-41.5-139.5-1.241-11.033.144-13.051 0-22.5-.274-17.958 11.517-47.557 12.5-54 18-44-36.667-56.833-58-55.5"/><path fill="#8005E0" d="M508.076 321c34 2 49.834-26.167 53.5-40.5-16-10-42.333-6.5-53.5-3.5-67.6 13.2-111.166-86.167-124.5-137.5-5.6-17.2 25-57.833 41-76h3c358-6.8 473.167 371.833 486 562 136.804-346-99.666-542.167-235-597-50-22.4-160.833-28.333-210-28.5-18 1.2-34.833 19.5-41 28.5-46.8 48.8-59.5 69-60 73-.8 47.2 10.334 88.333 16 103 22 93.6 92.167 116.667 124.5 116.5"/><path fill="#4E0B75" d="M574.985 854.558 568.576 870c-8.5 10-13.71 12.302-17.636 12.896-12.913 4.428-59.364-7.896-69.864-19.896 1.361-2.303 6-2.5 7.5-1.5 9.407 4.119 45.5 21.597 58.596 15.021 7.948-2.125 13.567-7.057 17.569-14.137 4.064-5.639 10.257-23.812 2.514-51.4l.428-1.011 2.459 2.03c2.084 7.746 5.934 26.497 4.843 42.555"/><path fill="#3E0670" d="M3.5 438.5c-2.4 4-9 120 7.5 154 4 71.2 61 147.333 78 171.5 34 74.8 269.5 200.5 360 151-24.8-27.6-223.834-152.167-241.5-202.5-7.2-14.4-18-8.667-22.5-4-8.8-8.8-153-215.333-161-248-1.2-15.2-17.333-21.167-20.5-22"/><path fill="#D405DD" d="M383.609 921.453c-314.8-43.6-386.834-304.833-383.5-430 8.8-3.2 11.333 11.333 11.5 19 3.2 88 54.666 170 80 200 42.4 112.4 217.666 184.5 300 206.5l-9.5.5c-1.6 1.6.333 3.333 1.5 4"/><path fill="#7103DB" d="M201.402 647.503c65.2 165.2 224.5 235.166 296 249.5l-13 10.5c-32 18.8-139.333-18.834-189-40-58-12.8-140.5-95-174.5-134.5 6.8-9.2-7.167-19.834-15-24-4.8-3.6-5.667-7.834-5.5-9.5.8-.4 15.333 9.833 22.5 15 .8-.8 22.333 14.333 33 22 .8-10.4 9.333-7 13.5-4-90.4-131.6-106.333-289.834-103-352.5 14-.8 95.833 178 135 267.5"/><path fill="#00E8F6" d="M500 727.5c-10-15.2-41.5-32.167-55-38.5-50.5-21-73.128-5.909-80.5 10-.667 2.333-.2 6.4 7 4 11.5-12.833 51.9-24.4 121.5 32 4.4.8 6.833-4.667 7-7.5"/></svg>
    )
}

const CollectionSVG: Component = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-layout-grid w-full h-auto"><rect width="7" height="7" x="3" y="3" rx="1"/><rect width="7" height="7" x="14" y="3" rx="1"/><rect width="7" height="7" x="14" y="14" rx="1"/><rect width="7" height="7" x="3" y="14" rx="1"/></svg>
    )
}

const DatabaseZapSVG: Component = () => {
    return (
        <svg style="box-shadow: inset -4px 4px 6px rgba(0, 0, 0, 0.3);" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#2ec9ff" stroke-width="1.3" stroke-linecap="round" stroke-linejoin="round" class="rounded-[1.3vh] bg-[#404040] w-full h-full p-[1.4vh] lucide lucide-database-zap"><ellipse cx="12" cy="5" rx="9" ry="3"/><path d="M3 5V19A9 3 0 0 0 15 21.84"/><path d="M21 5V8"/><path d="M21 12L18 17H22L19 22"/><path d="M3 12A9 3 0 0 0 14.59 14.87"/></svg>
    )
}

const FileSVG: Component<{ class?: string }> = (props) => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class={`lucide lucide-file w-full h-auto ${props.class || ''}`}><path d="M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"/><path d="M14 2v4a2 2 0 0 0 2 2h4"/></svg>
    )
}

const GitHubSVG: Component = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-full h-auto lucide lucide-github"><path d="M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4"/><path d="M9 18c-4.51 2-5-2-7-2"/></svg>
    )
}

const HamburgerSVG: Component = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#ffffff" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide w-full h-auto lucide-align-justify"><path d="M3 12h18"/><path d="M3 18h18"/><path d="M3 6h18"/></svg>
    )
}

const HomeSVG: Component = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-house w-full h-auto">
            <path d="M15 21v-8a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v8"/>
            <path d="M3 10a2 2 0 0 1 .709-1.528l7-5.999a2 2 0 0 1 2.582 0l7 5.999A2 2 0 0 1 21 10v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"/>
        </svg>
    )
}

const LockSVG: Component = () => {
    return (
        <svg style="box-shadow: inset -4px 4px 6px rgba(0, 0, 0, 0.3);" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#00a63e" stroke-width="1.3" stroke-linecap="round" stroke-linejoin="round" class="rounded-[1.3vh] bg-[#404040] w-full h-full p-[1.5vh] lucide lucide-lock"><rect width="18" height="11" x="3" y="11" rx="2" ry="2"/><path d="M7 11V7a5 5 0 0 1 10 0v4"/></svg>
    )
}

const ScanEyeSVG: Component = () => {
    return (
        <svg style="box-shadow: inset -4px 4px 6px rgba(0, 0, 0, 0.3);" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#8200db" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-scan-eye rounded-[1.3vh] bg-[#404040] w-full h-full p-[1.4vh]"><path d="M3 7V5a2 2 0 0 1 2-2h2"/><path d="M17 3h2a2 2 0 0 1 2 2v2"/><path d="M21 17v2a2 2 0 0 1-2 2h-2"/><path d="M7 21H5a2 2 0 0 1-2-2v-2"/><circle cx="12" cy="12" r="1"/><path d="M18.944 12.33a1 1 0 0 0 0-.66 7.5 7.5 0 0 0-13.888 0 1 1 0 0 0 0 .66 7.5 7.5 0 0 0 13.888 0"/></svg>
    )
}

const UnlockSVG: Component = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-lock-open"><rect width="18" height="11" x="3" y="11" rx="2" ry="2"/><path d="M7 11V7a5 5 0 0 1 9.9-1"/></svg>
    )
}

const UserSVG: Component = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-user w-full h-auto"><path d="M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2"/><circle cx="12" cy="7" r="4"/></svg>
    )
}

const UploadSVG: Component = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-arrow-up-to-line-icon lucide-arrow-up-to-line"><path d="M5 3h14"/><path d="m18 13-6-6-6 6"/><path d="M12 7v14"/></svg>
    )
}

const InfoSVG: Component = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-info-icon lucide-info w-full h-auto"><circle cx="12" cy="12" r="10"/><path d="M12 16v-4"/><path d="M12 8h.01"/></svg>
    )
}

const LoadingSVG: Component = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" class="w-full" viewBox="0 0 200 200"><radialGradient id="a12" cx=".66" fx=".66" cy=".3125" fy=".3125" gradientTransform="scale(1.5)"><stop offset="0" stop-color="#FFFFFF"></stop><stop offset=".3" stop-color="#FFFFFF" stop-opacity=".9"></stop><stop offset=".6" stop-color="#FFFFFF" stop-opacity=".6"></stop><stop offset=".8" stop-color="#FFFFFF" stop-opacity=".3"></stop><stop offset="1" stop-color="#FFFFFF" stop-opacity="0"></stop></radialGradient><circle transform-origin="center" fill="none" stroke="url(#a12)" stroke-width="15" stroke-linecap="round" stroke-dasharray="200 1000" stroke-dashoffset="0" cx="100" cy="100" r="70"><animateTransform type="rotate" attributeName="transform" calcMode="spline" dur="2" values="360;0" keyTimes="0;1" keySplines="0 0 1 1" repeatCount="indefinite"></animateTransform></circle><circle transform-origin="center" fill="none" opacity=".2" stroke="#FFFFFF" stroke-width="15" stroke-linecap="round" cx="100" cy="100" r="70"></circle></svg>
    )
}

const ErrorSVG: Component = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-octagon-x-icon lucide-octagon-x"><path d="m15 9-6 6"/><path d="M2.586 16.726A2 2 0 0 1 2 15.312V8.688a2 2 0 0 1 .586-1.414l4.688-4.688A2 2 0 0 1 8.688 2h6.624a2 2 0 0 1 1.414.586l4.688 4.688A2 2 0 0 1 22 8.688v6.624a2 2 0 0 1-.586 1.414l-4.688 4.688a2 2 0 0 1-1.414.586H8.688a2 2 0 0 1-1.414-.586z"/><path d="m9 9 6 6"/></svg>
    )
}

const EyeSVG: Component = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-eye-icon lucide-eye"><path d="M2.062 12.348a1 1 0 0 1 0-.696 10.75 10.75 0 0 1 19.876 0 1 1 0 0 1 0 .696 10.75 10.75 0 0 1-19.876 0"/><circle cx="12" cy="12" r="3"/></svg>
    )
}

const CopySVG: Component = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-copy-icon lucide-copy"><rect width="14" height="14" x="8" y="8" rx="2" ry="2"/><path d="M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2"/></svg>
    )
}

const BinSVG: Component = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-trash2-icon lucide-trash-2"><path d="M3 6h18"/><path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6"/><path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2"/><line x1="10" x2="10" y1="11" y2="17"/><line x1="14" x2="14" y1="11" y2="17"/></svg>
    )
}

const DownloadSVG: Component = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-arrow-down-to-line-icon lucide-arrow-down-to-line"><path d="M12 17V3"/><path d="m6 11 6 6 6-6"/><path d="M19 21H5"/></svg>
    )
}

const RefreshSVG: Component = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-full h-auto"><path d="M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8"/><path d="M21 3v5h-5"/><path d="M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16"/><path d="M8 16H3v5"/></svg>
    )
}

const CrossSVG = () => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-x"><path d="M18 6 6 18"></path><path d="m6 6 12 12"></path></svg>
)

export {Butterfly, CollectionSVG, DatabaseZapSVG, FileSVG, GitHubSVG, HamburgerSVG, HomeSVG, LockSVG, ScanEyeSVG, UnlockSVG, UserSVG, Anga, UploadSVG, InfoSVG, LoadingSVG, ErrorSVG, EyeSVG, CopySVG, BinSVG, DownloadSVG, FileTextSVG, RefreshSVG, CrossSVG}